# Generated by Django 2.2.3 on 2019-07-15 15:58

import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models


def forward(apps, _):
    """
    Creates the root tile that encompasses the whole planet
    """

    Tile = apps.get_model("robbit.Tile")
    Tile.objects.create(depth=0, x=0, y=0)


def backward(_, __):
    """
    Nothing to be done because the table is just getting deleted
    """


class Migration(migrations.Migration):

    initial = True

    dependencies = [("robbit", "0001_initial")]

    operations = [
        migrations.CreateModel(
            name="Area",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.SlugField(unique=True)),
                (
                    "area",
                    django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Image",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("flickr_id", models.BigIntegerField(unique=True)),
                ("coords", django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ("date_taken", models.DateTimeField(null=True)),
                ("data", django.contrib.postgres.fields.jsonb.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name="Tile",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "depth",
                    models.IntegerField(
                        db_index=True,
                        validators=[
                            django.core.validators.MinValueValidator(
                                0,
                                message="Depth cannot be lower than 0 as it is already a full-earth tile",
                            ),
                            django.core.validators.MinValueValidator(
                                18,
                                message="Max depth is 18 because more would not be useful (see documentation)",
                            ),
                        ],
                    ),
                ),
                ("x", models.IntegerField(db_index=True)),
                ("y", models.IntegerField(db_index=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("to-probe", "to probe"),
                            ("contained", "contained"),
                            ("split", "split"),
                        ],
                        default="to-probe",
                        help_text="to-probe = a first API call must be done to know if the tile needs to be split, contained = all pictures from this tile are returned by the API, split = sub-tiles must be inspected instead",
                        max_length=9,
                    ),
                ),
            ],
        ),
        migrations.RunPython(forward, backward),
    ]
